'use strict';BST.LINK_COLOR="#007700";BST.HIGHLIGHT_CIRCLE_COLOR="#007700";BST.FOREGROUND_COLOR="#007700";BST.BACKGROUND_COLOR="#EEFFEE";BST.PRINT_COLOR=BST.FOREGROUND_COLOR;BST.WIDTH_DELTA=50;BST.HEIGHT_DELTA=50;BST.STARTING_Y=50;BST.FIRST_PRINT_POS_X=50;BST.PRINT_VERTICAL_GAP=20;BST.PRINT_HORIZONTAL_GAP=50;function BST(a,b,c){this.init(a,b,c)}BST.prototype=new Algorithm;BST.prototype.constructor=BST;BST.superclass=Algorithm.prototype;
BST.prototype.init=function(a,b,c){var d=BST.superclass;this.startingX=b/2;this.first_print_pos_y=c-2*BST.PRINT_VERTICAL_GAP;this.print_max=b-10;d.init.call(this,a);this.addControls();this.nextIndex=0;this.commands=[];this.cmd("CreateLabel",0,"",20,10,0);this.nextIndex=1;this.animationManager.StartNewAnimation(this.commands);this.animationManager.skipForward();this.animationManager.clearHistory()};
BST.prototype.addControls=function(){this.insertField=addControlToAlgorithmBar("Text","");this.insertField.onkeydown=this.returnSubmit(this.insertField,this.insertCallback.bind(this),4);this.insertButton=addControlToAlgorithmBar("Button","Insert");this.insertButton.onclick=this.insertCallback.bind(this);this.deleteField=addControlToAlgorithmBar("Text","");this.deleteField.onkeydown=this.returnSubmit(this.deleteField,this.deleteCallback.bind(this),4);this.deleteButton=addControlToAlgorithmBar("Button",
"Delete");this.deleteButton.onclick=this.deleteCallback.bind(this);this.findField=addControlToAlgorithmBar("Text","");this.findField.onkeydown=this.returnSubmit(this.findField,this.findCallback.bind(this),4);this.findButton=addControlToAlgorithmBar("Button","Find");this.findButton.onclick=this.findCallback.bind(this);this.printButton=addControlToAlgorithmBar("Button","Print");this.printButton.onclick=this.printCallback.bind(this)};BST.prototype.reset=function(){this.nextIndex=1;this.treeRoot=null};
BST.prototype.insertCallback=function(a){a=this.insertField.value;a=this.normalizeNumber(a,4);""!=a&&(this.insertField.value="",this.implementAction(this.insertElement.bind(this),a))};BST.prototype.deleteCallback=function(a){a=this.deleteField.value;""!=a&&(a=this.normalizeNumber(a,4),this.deleteField.value="",this.implementAction(this.deleteElement.bind(this),a))};BST.prototype.printCallback=function(a){this.implementAction(this.printTree.bind(this),"")};
BST.prototype.printTree=function(a){this.commands=[];if(null!=this.treeRoot){this.highlightID=this.nextIndex++;a=this.nextIndex;this.cmd("CreateHighlightCircle",this.highlightID,BST.HIGHLIGHT_CIRCLE_COLOR,this.treeRoot.x,this.treeRoot.y);this.xPosOfNextLabel=BST.FIRST_PRINT_POS_X;this.yPosOfNextLabel=this.first_print_pos_y;this.printTreeRec(this.treeRoot);this.cmd("Delete",this.highlightID);for(this.cmd("Step");a<this.nextIndex;a++)this.cmd("Delete",a);this.nextIndex=this.highlightID}return this.commands};
BST.prototype.printTreeRec=function(a){this.cmd("Step");null!=a.left&&(this.cmd("Move",this.highlightID,a.left.x,a.left.y),this.printTreeRec(a.left),this.cmd("Move",this.highlightID,a.x,a.y),this.cmd("Step"));var b=this.nextIndex++;this.cmd("CreateLabel",b,a.data,a.x,a.y);this.cmd("SetForegroundColor",b,BST.PRINT_COLOR);this.cmd("Move",b,this.xPosOfNextLabel,this.yPosOfNextLabel);this.cmd("Step");this.xPosOfNextLabel+=BST.PRINT_HORIZONTAL_GAP;this.xPosOfNextLabel>this.print_max&&(this.xPosOfNextLabel=
BST.FIRST_PRINT_POS_X,this.yPosOfNextLabel+=BST.PRINT_VERTICAL_GAP);null!=a.right&&(this.cmd("Move",this.highlightID,a.right.x,a.right.y),this.printTreeRec(a.right),this.cmd("Move",this.highlightID,a.x,a.y),this.cmd("Step"))};BST.prototype.findCallback=function(a){a=this.normalizeNumber(this.findField.value,4);this.findField.value="";this.implementAction(this.findElement.bind(this),a)};
BST.prototype.findElement=function(a){this.commands=[];this.highlightID=this.nextIndex++;this.doFind(this.treeRoot,a);return this.commands};
BST.prototype.doFind=function(a,b){this.cmd("SetText",0,"Searching for "+b);null!=a?(this.cmd("SetHighlight",a.graphicID,1),a.data==b?(this.cmd("SetText",0,"Searching for "+b+" : "+b+" = "+b+" (Element found!)"),this.cmd("Step"),this.cmd("SetText",0,"Found:"+b),this.cmd("SetHighlight",a.graphicID,0)):a.data>b?(this.cmd("SetText",0,"Searching for "+b+" : "+b+" < "+a.data+" (look to left subtree)"),this.cmd("Step"),this.cmd("SetHighlight",a.graphicID,0),null!=a.left&&(this.cmd("CreateHighlightCircle",
this.highlightID,BST.HIGHLIGHT_CIRCLE_COLOR,a.x,a.y),this.cmd("Move",this.highlightID,a.left.x,a.left.y),this.cmd("Step"),this.cmd("Delete",this.highlightID)),this.doFind(a.left,b)):(this.cmd("SetText",0,"Searching for "+b+" : "+b+" > "+a.data+" (look to right subtree)"),this.cmd("Step"),this.cmd("SetHighlight",a.graphicID,0),null!=a.right&&(this.cmd("CreateHighlightCircle",this.highlightID,BST.HIGHLIGHT_CIRCLE_COLOR,a.x,a.y),this.cmd("Move",this.highlightID,a.right.x,a.right.y),this.cmd("Step"),
this.cmd("Delete",this.highlightID)),this.doFind(a.right,b))):(this.cmd("SetText",0,"Searching for "+b+" : < Empty Tree > (Element not found)"),this.cmd("Step"),this.cmd("SetText",0,"Searching for "+b+" :  (Element not found)"))};
BST.prototype.insertElement=function(a){this.commands=[];this.cmd("SetText",0,"Inserting "+a);this.highlightID=this.nextIndex++;null==this.treeRoot?(this.cmd("CreateCircle",this.nextIndex,a,this.startingX,BST.STARTING_Y),this.cmd("SetForegroundColor",this.nextIndex,BST.FOREGROUND_COLOR),this.cmd("SetBackgroundColor",this.nextIndex,BST.BACKGROUND_COLOR),this.cmd("Step"),this.treeRoot=new BSTNode(a,this.nextIndex,this.startingX,BST.STARTING_Y),this.nextIndex+=1):(this.cmd("CreateCircle",this.nextIndex,
a,100,100),this.cmd("SetForegroundColor",this.nextIndex,BST.FOREGROUND_COLOR),this.cmd("SetBackgroundColor",this.nextIndex,BST.BACKGROUND_COLOR),this.cmd("Step"),a=new BSTNode(a,this.nextIndex,100,100),this.nextIndex+=1,this.cmd("SetHighlight",a.graphicID,1),this.insert(a,this.treeRoot),this.resizeTree());this.cmd("SetText",0,"");return this.commands};
BST.prototype.insert=function(a,b){this.cmd("SetHighlight",b.graphicID,1);this.cmd("SetHighlight",a.graphicID,1);a.data<b.data?this.cmd("SetText",0,a.data+" < "+b.data+".  Looking at left subtree"):this.cmd("SetText",0,a.data+" >= "+b.data+".  Looking at right subtree");this.cmd("Step");this.cmd("SetHighlight",b.graphicID,0);this.cmd("SetHighlight",a.graphicID,0);a.data<b.data?null==b.left?(this.cmd("SetText",0,"Found null tree, inserting element"),this.cmd("SetHighlight",a.graphicID,0),b.left=a,
a.parent=b,this.cmd("Connect",b.graphicID,a.graphicID,BST.LINK_COLOR)):(this.cmd("CreateHighlightCircle",this.highlightID,BST.HIGHLIGHT_CIRCLE_COLOR,b.x,b.y),this.cmd("Move",this.highlightID,b.left.x,b.left.y),this.cmd("Step"),this.cmd("Delete",this.highlightID),this.insert(a,b.left)):null==b.right?(this.cmd("SetText",0,"Found null tree, inserting element"),this.cmd("SetHighlight",a.graphicID,0),b.right=a,a.parent=b,this.cmd("Connect",b.graphicID,a.graphicID,BST.LINK_COLOR),a.x=b.x+BST.WIDTH_DELTA/
2,a.y=b.y+BST.HEIGHT_DELTA,this.cmd("Move",a.graphicID,a.x,a.y)):(this.cmd("CreateHighlightCircle",this.highlightID,BST.HIGHLIGHT_CIRCLE_COLOR,b.x,b.y),this.cmd("Move",this.highlightID,b.right.x,b.right.y),this.cmd("Step"),this.cmd("Delete",this.highlightID),this.insert(a,b.right))};
BST.prototype.deleteElement=function(a){this.commands=[];this.cmd("SetText",0,"Deleting "+a);this.cmd("Step");this.cmd("SetText",0,"");this.highlightID=this.nextIndex++;this.treeDelete(this.treeRoot,a);this.cmd("SetText",0,"");return this.commands};
BST.prototype.treeDelete=function(a,b){var c=!1;if(null!=a)if(null!=a.parent&&(c=a.parent.left==a),this.cmd("SetHighlight",a.graphicID,1),b<a.data?this.cmd("SetText",0,b+" < "+a.data+".  Looking at left subtree"):b>a.data?this.cmd("SetText",0,b+" > "+a.data+".  Looking at right subtree"):this.cmd("SetText",0,b+" == "+a.data+".  Found node to delete"),this.cmd("Step"),this.cmd("SetHighlight",a.graphicID,0),b==a.data)if(null==a.left&&null==a.right)this.cmd("SetText",0,"Node to delete is a leaf.  Delete it."),
this.cmd("Delete",a.graphicID),c&&null!=a.parent?a.parent.left=null:null!=a.parent?a.parent.right=null:treeRoot=null,this.resizeTree(),this.cmd("Step");else{if(null==a.left)this.cmd("SetText",0,"Node to delete has no left child.  \nSet parent of deleted node to right child of deleted node."),null!=a.parent?(this.cmd("Disconnect",a.parent.graphicID,a.graphicID),this.cmd("Connect",a.parent.graphicID,a.right.graphicID,BST.LINK_COLOR),this.cmd("Step"),this.cmd("Delete",a.graphicID),c?a.parent.left=a.right:
a.parent.right=a.right,a.right.parent=a.parent):(this.cmd("Delete",a.graphicID),this.treeRoot=a.right,this.treeRoot.parent=null);else if(null==a.right)this.cmd("SetText",0,"Node to delete has no right child.  \nSet parent of deleted node to left child of deleted node."),null!=a.parent?(this.cmd("Disconnect",a.parent.graphicID,a.graphicID),this.cmd("Connect",a.parent.graphicID,a.left.graphicID,BST.LINK_COLOR),this.cmd("Step"),this.cmd("Delete",a.graphicID),c?a.parent.left=a.left:a.parent.right=a.left,
a.left.parent=a.parent):(this.cmd("Delete",a.graphicID),this.treeRoot=a.left,this.treeRoot.parent=null);else{this.cmd("SetText",0,"Node to delete has two childern.  \nFind largest node in left subtree.");this.highlightID=this.nextIndex;this.nextIndex+=1;this.cmd("CreateHighlightCircle",this.highlightID,BST.HIGHLIGHT_CIRCLE_COLOR,a.x,a.y);b=a.left;this.cmd("Move",this.highlightID,b.x,b.y);for(this.cmd("Step");null!=b.right;)b=b.right,this.cmd("Move",this.highlightID,b.x,b.y),this.cmd("Step");this.cmd("SetText",
a.graphicID," ");c=this.nextIndex;this.nextIndex+=1;this.cmd("CreateLabel",c,b.data,b.x,b.y);a.data=b.data;this.cmd("Move",c,a.x,a.y);this.cmd("SetText",0,"Copy largest value of left subtree into node to delete.");this.cmd("Step");this.cmd("SetHighlight",a.graphicID,0);this.cmd("Delete",c);this.cmd("SetText",a.graphicID,a.data);this.cmd("Delete",this.highlightID);this.cmd("SetText",0,"Remove node whose value we copied.");null==b.left?(b.parent!=a?b.parent.right=null:a.left=null,this.cmd("Delete",
b.graphicID)):(this.cmd("Disconnect",b.parent.graphicID,b.graphicID),this.cmd("Connect",b.parent.graphicID,b.left.graphicID,BST.LINK_COLOR),this.cmd("Step"),this.cmd("Delete",b.graphicID),b.parent!=a?(b.parent.right=b.left,b.left.parent=b.parent):(a.left=b.left,b.left.parent=a))}this.resizeTree()}else b<a.data?(null!=a.left&&(this.cmd("CreateHighlightCircle",this.highlightID,BST.HIGHLIGHT_CIRCLE_COLOR,a.x,a.y),this.cmd("Move",this.highlightID,a.left.x,a.left.y),this.cmd("Step"),this.cmd("Delete",
this.highlightID)),this.treeDelete(a.left,b)):(null!=a.right&&(this.cmd("CreateHighlightCircle",this.highlightID,BST.HIGHLIGHT_CIRCLE_COLOR,a.x,a.y),this.cmd("Move",this.highlightID,a.right.x,a.right.y),this.cmd("Step"),this.cmd("Delete",this.highlightID)),this.treeDelete(a.right,b));else this.cmd("SetText",0,"Elemet "+b+" not found, could not delete")};
BST.prototype.resizeTree=function(){var a=this.startingX;this.resizeWidths(this.treeRoot);null!=this.treeRoot&&(this.treeRoot.leftWidth>a?a=this.treeRoot.leftWidth:this.treeRoot.rightWidth>a&&(a=Math.max(this.treeRoot.leftWidth,2*a-this.treeRoot.rightWidth)),this.setNewPositions(this.treeRoot,a,BST.STARTING_Y,0),this.animateNewPositions(this.treeRoot),this.cmd("Step"))};
BST.prototype.setNewPositions=function(a,b,c,d){null!=a&&(a.y=c,-1==d?b-=a.rightWidth:1==d&&(b+=a.leftWidth),a.x=b,this.setNewPositions(a.left,b,c+BST.HEIGHT_DELTA,-1),this.setNewPositions(a.right,b,c+BST.HEIGHT_DELTA,1))};BST.prototype.animateNewPositions=function(a){null!=a&&(this.cmd("Move",a.graphicID,a.x,a.y),this.animateNewPositions(a.left),this.animateNewPositions(a.right))};
BST.prototype.resizeWidths=function(a){if(null==a)return 0;a.leftWidth=Math.max(this.resizeWidths(a.left),BST.WIDTH_DELTA/2);a.rightWidth=Math.max(this.resizeWidths(a.right),BST.WIDTH_DELTA/2);return a.leftWidth+a.rightWidth};function BSTNode(a,b,c,d){this.data=a;this.x=c;this.y=d;this.graphicID=b;this.parent=this.right=this.left=null}
BST.prototype.disableUI=function(a){this.insertField.disabled=!0;this.insertButton.disabled=!0;this.deleteField.disabled=!0;this.deleteButton.disabled=!0;this.findField.disabled=!0;this.findButton.disabled=!0;this.printButton.disabled=!0};BST.prototype.enableUI=function(a){this.insertField.disabled=!1;this.insertButton.disabled=!1;this.deleteField.disabled=!1;this.deleteButton.disabled=!1;this.findField.disabled=!1;this.findButton.disabled=!1;this.printButton.disabled=!1};var currentAlg;
function init(){var a=initCanvas();currentAlg=new BST(a,canvas.width,canvas.height)};