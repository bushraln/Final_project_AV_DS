'use strict';var source,target,test,start,q,flagIn=!1,edge,stepDelay=900,data={nodes:[],links:[],attrs:[]},neighbor=[],d=[],v=[],f=[],qExist=[],currentNaighbor=[],algorithim=["Add a root for the tree","Add Child At Left","Add Child at Right","If Parent value Bigger than current-SWICH"];
function DFS(){function h(){this.elements=[]}function l(a,b){time+=1;var c;d[b]=time;data.attrs[b].d=time;data.attrs[b].color="Gray";for(c=0;c<data.links.length;c++)data.links[c].source==a&&neighborU.enqueue(data.links[c].target),data.links[c].target==a&&neighborU.enqueue(data.links[c].source);for(;!neighborU.isEmpty();)c=neighborU.dequeue(),"White"==data.attrs[k(c)].color&&(v[k(c)]=a,data.attrs[k(c)].v=a,l(c,k(c)));time+=1;f[b]=time;data.attrs[b].f=time;data.attrs[b].color="black";upDateRows(data.attrs[b].v,
data.attrs[b].d,data.attrs[b].f)}function k(a){for(var b=0;b<sizeArray;b++)if(data.attrs[b].node==a)return b}h.prototype.enqueue=function(a){this.elements.push(a)};h.prototype.dequeue=function(){return this.elements.shift()};h.prototype.isEmpty=function(){return 0==this.elements.length};h.prototype.peek=function(){return this.isEmpty()?void 0:this.elements[0]};h.prototype.length=function(){return this.elements.length};neighborU=new h;q=new h;this.storage=[];this.insert=function(a){0==GetSize?alert("Please Enter a Size of Nodes"):
this.storage.length<sizeArray?(void 0===a&&(a=parseInt(document.getElementById("value").value),document.getElementById("value").value=""),this.storage.push(a),insertNode(a),node={value:a,id:this.storage.length,x:coorxy[this.storage.length-1][0],y:coorxy[this.storage.length-1][1]},data.nodes.push(node),0==sizeArray-this.storage.length&&drowGraph()):alert("Table Is Full")};this.initArrays=function(a){start=a;for(a=0;a<sizeArray;a++)d[a]=0,f[a]=0,data.attrs.push({node:this.storage[a],color:"White",d:d[a],
f:f[a]}),v[a]="NIL";CreateInit();time=0;data.attrs[0].v="NIL";for(a=0;a<sizeArray;a++)data.attrs[a].node==Number(start)&&(flagIn=!0,indexStart=a,"White"==data.attrs[a].color&&l(data.attrs[a].node,a));flagIn=!0;for(a=0;a<sizeArray;a++)indexStart!=a&&"White"==data.attrs[a].color&&l(data.attrs[a].node,a)};this.updateArrays=function(){upDateRows(v,d,f)};this.bfs=function(a){for(var b=0;b<data.links.length;b++)data.links[b].source==a&&neighbor.push(data.links[b].target),data.links[b].target==a&&neighbor.push(data.links[b].source);
0!=neighbor.length&&CreateNeighborArray(neighbor)};this.insertedge=function(a){source=Number(a[1]);target=Number(a[3]);if(isNaN(source)||isNaN(target))alert("error edge,Please choose in this format:(a,b) or (1,3)");else for(link={source,target},data.links.push(link),a=0;a<data.nodes.length;a++)data.nodes[a].value==source&&(sourcex=data.nodes[a].x,sourcey=data.nodes[a].y),data.nodes[a].value==target&&(targetx=data.nodes[a].x,targety=data.nodes[a].y)};DFS.prototype.removeMax=function(){if(0===this.storage.length)return null;
if(1===this.storage.length){var a=this.storage.pop();restoreInitial();return a}a=this.storage[-1];this.storage[-1]=this.storage.pop();swapRoot();var b=this,c=function(e){var g=e;2*e+1<b.storage.length&&b.storage[2*e+1]<b.storage[e]&&(g=2*e+1);2*e+2<b.storage.length&&b.storage[2*e+2]<b.storage[e]&&(g=2*e+2);g!==e&&(b.storage[e]^=b.storage[g],b.storage[g]^=b.storage[e],b.storage[e]^=b.storage[g],n=this.storage,swapNodes(g,e),setTimeout(function(){c(g)},stepDelay))};setTimeout(function(){c(0)},stepDelay);
return a}}var dfs=new DFS;