'use strict';function Node(a=null){this.value=a;this.right=this.left=this.height=this.parent=null;this.json={color:"steelblue",name:this.value,direction:null,children:[]}}
function Heap(){this.storage=[];this.insertNode=function(a,d){null==a?a=new Node(d):d<=a.value&&0==a.json.children.length&&(a.left=this.Insert(a.left,d),a.left.parent=a,a.left.json.direction="left",a.json.children.push(a.left.json));d<=a.value&&0==a.json.children.length&&(a.right=this.Insert(a.right,d),a.right.parent=a,a.right.json.direction="right",a.json.children.push(a.right.json));return a};this.insert=function(a,d=root){if(0==GetSize)alert("Please Enter a Size of Heap");else if(this.storage.length<
sizeArray){void 0===a&&(a=parseInt(document.getElementById("value").value),document.getElementById("value").value="");insertNode(d,a);this.storage.push(a);d=new Node(a);var b=this,f=function(c){var e=Math.ceil(c/2-1);if(0>e||b.storage[c]>=b.storage[e])return"value added to index "+c;b.storage[c]^=b.storage[e];b.storage[e]^=b.storage[c];b.storage[c]^=b.storage[e];swapNodes(c,e);setTimeout(function(){return f(e)},stepDelay)};setTimeout(function(){return f(b.storage.length-1)},stepDelay)}else alert("Heap Is Full")}}
;